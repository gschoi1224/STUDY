스타일링 방식
1. 일반 css : 컴포넌트를 스타일링하는 가장 기본적인 방식
2. Sass(Syntactically Awesome Style Sheets) : 자주 사용되는 CSS 전처리기 중 하나로 확장된 CSS 문법을 사용하여 CSS 코드를 더욱 쉽게 작성할 수 있도록 해 줌
    - .sass : 중괄호 세미콜론 안씀
        $front-stack : Helvetica, sans-serif
        $primary-color : #333

        body
            font : 100% $front-stack
            color : $primary-color
    - .scss : 더 많이 씀
        $front-stack : Helvetica, sans-serif;
        $primary-color:#333;

        body {
            font : 100% $front-stack;
            color : $primary-color;
        }
    - yarn add node-sass@4.14.1  -- 설치
    - yarn eject -- 세부 설정을 밖으로 꺼냄 (git 커밋이 안 된 상태면 불가능) /config/webpack.config.js 에서 설정 변경
    - yarn add open-color(매우 편리한 색상 팔레트) include-media(반응형 디자인을 쉽게 만들어줌)
3. CSS Module : 스타일을 작성할 때 CSS 클래스가 다른 CSS 클래스의 이름과 절대 충돌하지 않도록 파일마다 고유한 이름을 자동으로 생성해주는 옵션
    - [파일이름]_[클래스이름]_[해시값] 형태로 자동으로 만들어줌
    - yarn add classnames (CSS 클래스를 조건부로 설정할 때 매우 유용, CSS Module을 사용할 때 여러 클래스를 적용할 때 매우 편리)
4. styled-components : 스타일을 자바스크립트 파일에 내장시키는 방식으로 스타일을 작성함과 동시에 해당 스타일이 적용된 컴포넌트를 만들 수 있게 해 줌
    - yarn add styled-components 설치
    - props 값으로 전달해 주는 값을 쉽게 스타일에 적용할 수 있다는 것이 가장 큰 장점
    - 스타일을 작성할 때 `을 사용하여 만든 문자열에 스타일 정보를 넣어주는 문법을 Tagged 템플릿 리터럴이라고 부름
    - 특정 컴포넌트 자체에 스타일링해 주고 싶다면 태그의 타입을 styled 함수의 인자로 전달 styled('input')`background:gray` 
    - 아예 컴포넌트 형식의 값을 넣어 줌 styled(Link)`color:blue;`